"use strict";(self.webpackChunk_33book=self.webpackChunk_33book||[]).push([[2464],{628:(e,o)=>{o.A=(e,o)=>{const c=e.__vccOpts||e;for(const[e,t]of o)c[e]=t;return c}},7210:(e,o,c)=>{c.r(o),c.d(o,{comp:()=>d,data:()=>n});var t=c(8178);const l={class:"MathJax",jax:"SVG",style:{position:"relative"}},i={style:{"vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.394ex",height:"1.557ex",role:"img",focusable:"false",viewBox:"0 -666 1500 688","aria-hidden":"true"},a={},d=(0,c(628).A)(a,[["render",function(e,o){return(0,t.uX)(),(0,t.CE)("div",null,[o[9]||(o[9]=(0,t.Lk)("p",null,[(0,t.Lk)("a",{href:"https://cpp.33dai.wiki/reference/zh/cpp/container.html",target:"_blank",rel:"noopener noreferrer"},"C++ 文档：容器库")],-1)),o[10]||(o[10]=(0,t.Lk)("h3",{id:"vector-向量、动态数组",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#vector-向量、动态数组"},[(0,t.Lk)("span",null,"vector（向量、动态数组）")])],-1)),(0,t.Lk)("ul",null,[o[7]||(o[7]=(0,t.Lk)("li",null,[(0,t.Lk)("code",null,"vector<int> a;"),(0,t.eW)("：定义了一个名字叫作 "),(0,t.Lk)("code",null,"a"),(0,t.eW)("，可以存 "),(0,t.Lk)("code",null,"int"),(0,t.eW)(" 的动态数组。初始数组为空。")],-1)),(0,t.Lk)("li",null,[o[2]||(o[2]=(0,t.Lk)("code",null,"vector<int> a[100];",-1)),o[3]||(o[3]=(0,t.eW)("：定义了 ")),(0,t.Lk)("mjx-container",l,[((0,t.uX)(),(0,t.CE)("svg",i,o[0]||(o[0]=[(0,t.Fv)('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1000,0)"></path></g></g></g>',1)]))),o[1]||(o[1]=(0,t.Lk)("mjx-assistive-mml",{unselectable:"on",display:"inline"},[(0,t.Lk)("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[(0,t.Lk)("mn",null,"100")])],-1))]),o[4]||(o[4]=(0,t.eW)(" 个动态数组 ")),o[5]||(o[5]=(0,t.Lk)("code",null,"a[0]~a[99]",-1)),o[6]||(o[6]=(0,t.eW)(" 都是动态数组。"))]),o[8]||(o[8]=(0,t.Fv)("<li><code>a.push_back(x);</code>： 添加元素，把 <code>x</code> 添加到动态数组末尾。</li><li><code>a[pos]</code>：访问元素，访问下标为 <code>pos</code> 的元素</li><li><code>a.clear()</code>：清空数组，清空整个数组，数组大小也归零了。</li><li><code>a.resize(100)</code>：更改数组大小，把数组大小修改为 <code>100</code></li><li><code>a.size()</code>：当前数组大小</li><li><code>a.empty()</code>：数组是否为空，数组是空的就返回真</li><li><code>a.begin()</code>：起始位置迭代器：</li><li><code>a.end()</code>：结束位置迭代器：</li>",8))]),o[11]||(o[11]=(0,t.Fv)('<h3 id="deque-双端队列" tabindex="-1"><a class="header-anchor" href="#deque-双端队列"><span>deque（双端队列）</span></a></h3><ul><li><code>deque&lt;int&gt; q;</code>：定义了一个名字叫作 <code>q</code> 的双端队列。</li><li><code>q.front()</code>：返回队头（的引用）。</li><li><code>q.back()</code>：返回队尾（的引用）。</li><li><code>q.push_back(x);</code>：从队列末尾放入 <code>x</code>。</li><li><code>q.push_front(x);</code>：从队列开头放入 <code>x</code>。</li><li><code>q.pop_back();</code>：从队列末尾弹出元素。</li><li><code>q.pop_front();</code>：从队列开头弹出元素。</li><li><code>q[pos]</code>：访问元素，访问下标为 <code>pos</code> 的元素</li><li><code>q.clear()</code>：清空双端队列，双端队列大小也归零了。</li><li><code>q.size()</code>：当前队列大小</li><li><code>q.empty()</code>：队列是否为空，队列是空的就返回真</li></ul><h3 id="stack-栈" tabindex="-1"><a class="header-anchor" href="#stack-栈"><span>stack（栈）</span></a></h3><ul><li><code>stack&lt;int&gt; sta;</code>：定义了一个名字叫作 <code>sta</code> 的栈。</li><li><code>sta.top()</code>：返回栈顶（的引用）。</li><li><code>sta.push(x);</code>：把 <code>x</code> 压入栈。</li><li><code>sta.pop();</code>：弹出栈顶元素。</li><li><code>sta.size()</code>：当前栈大小</li><li><code>sta.empty()</code>：栈是否为空，栈是空的就返回真</li></ul><h3 id="queue-队列" tabindex="-1"><a class="header-anchor" href="#queue-队列"><span>queue（队列）</span></a></h3><ul><li><code>queue&lt;int&gt; q;</code>：定义了一个名字叫作 <code>q</code> 的队列。</li><li><code>q.front()</code>：返回队头（的引用）。</li><li><code>q.back()</code>：返回队尾（的引用）。</li><li><code>q.push(x);</code>：把 <code>x</code> 压入队列。</li><li><code>q.pop();</code>：弹出队头。</li><li><code>q.size()</code>：当前队列大小</li><li><code>q.empty()</code>：队列是否为空，队列是空的就返回真</li></ul>',6))])}]]),n=JSON.parse('{"path":"/doc/cpp/stl_container.html","title":"容器库常用内容","lang":"zh-CN","frontmatter":{"title":"容器库常用内容","order":4,"description":"C++ 文档：容器库 vector（向量、动态数组） vector<int> a;：定义了一个名字叫作 a，可以存 int 的动态数组。初始数组为空。 vector<int> a[100];：定义了 个动态数组 a[0]~a[99] 都是动态数组。 a.push_back(x);： 添加元素，把 x 添加到动态数组末尾。 a[pos]：访问元素，访问下...","head":[["meta",{"property":"og:url","content":"https://33dai.wiki/doc/cpp/stl_container.html"}],["meta",{"property":"og:site_name","content":"三三文档"}],["meta",{"property":"og:title","content":"容器库常用内容"}],["meta",{"property":"og:description","content":"C++ 文档：容器库 vector（向量、动态数组） vector<int> a;：定义了一个名字叫作 a，可以存 int 的动态数组。初始数组为空。 vector<int> a[100];：定义了 个动态数组 a[0]~a[99] 都是动态数组。 a.push_back(x);： 添加元素，把 x 添加到动态数组末尾。 a[pos]：访问元素，访问下..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-13T03:15:40.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-13T03:15:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"容器库常用内容\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-13T03:15:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"33DAI\\",\\"url\\":\\"33dai.wiki\\"}]}"]]},"headers":[{"level":3,"title":"vector（向量、动态数组）","slug":"vector-向量、动态数组","link":"#vector-向量、动态数组","children":[]},{"level":3,"title":"deque（双端队列）","slug":"deque-双端队列","link":"#deque-双端队列","children":[]},{"level":3,"title":"stack（栈）","slug":"stack-栈","link":"#stack-栈","children":[]},{"level":3,"title":"queue（队列）","slug":"queue-队列","link":"#queue-队列","children":[]}],"git":{"createdTime":1744512080000,"updatedTime":1752376540000,"contributors":[{"name":"代建杉","email":"daijianshan33@outlook.com","commits":3}]},"readingTime":{"minutes":1.49,"words":447},"filePathRelative":"doc/cpp/stl_container.md","localizedDate":"2025年4月13日","autoDesc":true,"excerpt":"<p><a href=\\"https://cpp.33dai.wiki/reference/zh/cpp/container.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">C++ 文档：容器库</a></p>\\n<h3>vector（向量、动态数组）</h3>\\n<ul>\\n<li><code>vector&lt;int&gt; a;</code>：定义了一个名字叫作 <code>a</code>，可以存 <code>int</code> 的动态数组。初始数组为空。</li>\\n<li><code>vector&lt;int&gt; a[100];</code>：定义了  个动态数组 <code>a[0]~a[99]</code> 都是动态数组。</li>\\n<li><code>a.push_back(x);</code>： 添加元素，把 <code>x</code> 添加到动态数组末尾。</li>\\n<li><code>a[pos]</code>：访问元素，访问下标为 <code>pos</code> 的元素</li>\\n<li><code>a.clear()</code>：清空数组，清空整个数组，数组大小也归零了。</li>\\n<li><code>a.resize(100)</code>：更改数组大小，把数组大小修改为 <code>100</code></li>\\n<li><code>a.size()</code>：当前数组大小</li>\\n<li><code>a.empty()</code>：数组是否为空，数组是空的就返回真</li>\\n<li><code>a.begin()</code>：起始位置迭代器：</li>\\n<li><code>a.end()</code>：结束位置迭代器：</li>\\n</ul>"}')}}]);